#!/bin/bash
# =========================================================================
# =========================================================================
#
#	lmsPath.lib
#
#		Library to assist in managing bash PATHs in .bashrc.
#
# =========================================================================
#
# @author Jay Wheeler.
# @version 0.1.0
# @copyright © 2019. EarthWalk Software.
# @license Licensed under the GNU General Public License, GPL-3.0-or-later.
# @package ewsdocker/ldc-dev
# @subpackage lmsPath.lib
#
# =========================================================================
#
#	Copyright © 2019. EarthWalk Software
#	Licensed under the GNU General Public License, GPL-3.0-or-later.
#
#   This file is part of ewsdocker/ldc-dev.
#
#   ewsdocker/ldc-dev is free software: you can redistribute 
#   it and/or modify it under the terms of the GNU General Public License 
#   as published by the Free Software Foundation, either version 3 of the 
#   License, or (at your option) any later version.
#
#   ewsdocker/ldc-dev is distributed in the hope that it will 
#   be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ewsdocker/ldc-dev.  If not, see 
#   <http://www.gnu.org/licenses/>.
#
# =========================================================================
# =========================================================================

# =========================================================================
# =========================================================================
#
#	library dependencies
#
# =========================================================================
#
#	lmsconCli.lib
#
# =========================================================================
# =========================================================================

# =========================================================================
# =========================================================================
#
#	global declarations
#
# =========================================================================
# =========================================================================

#
#	The following variables are READ-ONLY.  
#
#	This means that these variables can be queried from anywhere, 
#	but should ONLY be modified by a lmsPath library function.
#

declare    lmspath_path=""
declare    lmspath_list=""
declare -a lmspath_entries=()

declare    lmspath_modified=0
declare    lmspath_init=0

declare    lmspath_blank=" "
declare    lmspath_colon=":"

# =========================================================================
# =========================================================================
#
#	START of lmsPath.lib Library
#
# =========================================================================
# =========================================================================

# =========================================================================
#
#    lpathLoad - load/reload PATH to $lmspath_path
#					NOTE: does NOT do a commit before reloading
#	Entry:
#		none
#
#	Exit:
#		0 = no error
#		non-zero = error code
#
# =========================================================================
function lpathLoad()
{
	lmspath_path="$PATH"
	lmspath_list=${lmspath_path//$lmspath_colon/$lmspath_blank}
	lmspath_entries=( ${lmspath_list} )

	lmspath_modified=0
 	lmspath_init=1

	return 0
}

# =========================================================================
#
#    lpathInit - force initialization, if not set
#
#	Entry:
#		none
#
#	Exit:
#		0 = no error
#
# =========================================================================
function lpathInit()
{
	[[ ${lmspath_init} -eq 0 ]] && lpathLoad
	return 0
}

# =========================================================================
#
#    lpathCommit - modify and reload .bashrc, if lmspath_modified = 1
#
#	Entry:
#		lPath = none
#
#	Exit:
#		0 = modified path was commited
#		non-zero = request failed
#
# =========================================================================
function lpathCommit()
{
	[[ $lmspath_init -eq 0 ]] && lpathInit

	[[ $lmspath_modified -eq 0 ]] ||
	 {
	 	echo "export PATH=${lmspath_path}" >> ${HOME}/.bashrc
		source ${HOME}/.bashrc
		
		lpathLoad
	 }

	return 0
}

# =========================================================================
#
#    lpathExists
#
#	Entry:
#		lPath = path entry to check for
#
#	Exit:
#		0 = requested path (lPath) was found
#		non-zero = not found
#
# =========================================================================
function lpathExists()
{
	local    lPath=${1:-""}
	local    lxistResult=0

	[[ $lmspath_init -eq 0 ]] && lpathInit

	[[ -z ${lPath} ]] && lxistResult=1

	[[ ${lxistResult} -eq 0 ]] && 
	 {
		[[ "$lmspath_list" =~ "$lPath" ]] || lxistResult=2
	 }

	return ${lxistResult}
}

# =========================================================================
#
#    lpathDelete - delete an element in $lmspath_path
#
#	Entry:
#		lPath = (string) path entry to delete
#
#	Exit:
#		0 = requested path (lPath) was deleted
#		non-zero = requested path (lPath) was not found
#
# =========================================================================
function lpathDelete()
{
	local    lPath=${1:-""}

	local -a lEntries=()
	local    ldelResult=0

	[[ $lmspath_init -eq 0 ]] && lpathInit

	[[ -z ${lPath} ]] && ldelResult=1

	[[ ${ldelResult} -eq 0 ]] &&
	 {
		lpathExists ${lPath}
		[[ $? -eq 0 ]] || ldelResult=2

		[[ ${ldelResult} -eq 0 ]] &&
		 {
		 	local ldelKey=0
			for lElement in "$lmspath_entries"
		 	do
		 		[[ ${lElement} == ${lPath} ]] || 
		 		 {
		 		 	let ldelKey=ldelKey+1
		 		 	continue
		 		 }

		 		unset 'lmspath_entries[$ldelKey]'

		 		lmspath_list=${lmspath_entries[@]}

		 		lmspath_entries=( "$lmspath_list" )
		 		lmspath_path=${lmspath_list//$lmspath_blank/$lmspath_colon}

		 		lmspath_modified=1

		 		break
		 	done
		 	
		 	[[ ${lElement} == ${lPath} ]] || ldelResult=3
		 }
	 }
	
	return ${ldelResult}
}

# =========================================================================
#
#    lpathAdd - add an element in $lmspath_path
#
#	Entry:
#		lPath = path entry to delete
#
#	Exit:
#		0 = requested path (lPath) was deleted
#		non-zero = requested path (lPath) was not found
#
# =========================================================================
function lpathAdd()
{
	local    lPath=${1:-""}
	local    laddResult=0

	lpathExists $lPath
	
	[[ -z ${lPath} ]] && laddResult=1

	[[ ${laddResult} -eq 0 ]] &&
	 {
	 	lmspath_list="${lPath} ${lmspath_list}"

		lmspath_path=${lmspath_list//$lmspath_blank/$lmspath_colon}
		lmspath_entries=( "$lmspath_list" )

		lmspath_modified=1
	 }
	
	return ${laddResult}
}

# =========================================================================
#
#    lpath
#
#	Entry:
#		pathFunction = function to perform
#						(one of "load", "exists", "add", "delete",
#						        "commit", "pending"), defaults to "exists".
#		pathPath = (optional) path element to operate on, if required.
#
#	Exit:
#		0 = no error
#		non-zero = error code
#
# =========================================================================
function lpath()
{
	local    pFunc=${1:-"exists"}
	local    pPath=${2:-""}

	local -a pEntries=()
	local    lpathResult=0

	[[ ${lmspath_init} -eq 0 ]] && lpathInit

	[[ -z ${pPath} ]] && lpathResult=1

	[[ ${lpathResult} -eq 0 ]] &&
	 {
		case $pFunc in

			"load")
				lpathLoad
				[[ $? -eq 0 ]] || lpathResult=2

				;;
			
			"exists")
				lpathExists ${pPath}
				[[ $? -eq 0 ]] || lpathResult=3

				;;
			
			"add")
				lpathAdd ${pPath}
				[[ $? -eq 0 ]] || lpathResult=4

				;;
			
			"delete")
				lpathDelete ${pPath}
				[[ $? -eq 0 ]] || lpathResult=5

				;;
			
			"commit")
				lpathCommit
				[[ $? -eq 0 ]] || lpathResult=6

				;;
			
			"pending")
				[[ ${lmspath_modified} -eq 0 ]] && lpathResult=7

				;;
			
			*)
				lpathResult=8
				;;
				
		esac
	 }

	return ${lpathResult}
}

# =========================================================================
# =========================================================================
#
#	END of lmsPath.lib Library
#
# =========================================================================
# =========================================================================

