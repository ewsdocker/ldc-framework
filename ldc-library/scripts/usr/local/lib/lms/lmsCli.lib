# =========================================================================================
# =========================================================================================
#
#	lmsCli
#	  cli parsing library.
#
# =========================================================================================
#
# @author Jay Wheeler.
# @version 0.0.4
# @copyright © 2017-2020. EarthWalk Software.
# @license Licensed under the GNU General Public License, GPL-3.0-or-later.
# @package ewsdocker/ldc-library
# @subpackage lmsCli
#
# =========================================================================
#
#	Copyright © 2017-2020. EarthWalk Software
#	Licensed under the GNU General Public License, GPL-3.0-or-later.
#
#   This file is part of ewsdocker/ldc-library.
#
#   ewsdocker/ldc-library is free software: you can redistribute 
#   it and/or modify it under the terms of the GNU General Public License 
#   as published by the Free Software Foundation, either version 3 of the 
#   License, or (at your option) any later version.
#
#   ewsdocker/ldc-library is distributed in the hope that it will 
#   be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ewsdocker/ldc-library.  If not, see 
#   <http://www.gnu.org/licenses/>.
#
#
# =========================================================================================
# =========================================================================================

# =========================================================================================
#
#    Dependencies: 
#		lmsDeclare.lib (for lmsDeclareStr)
#
# =========================================================================================

# =========================================================================================
#
#    Command line parameter input parsing
#
# =========================================================================================

declare -A cliParam=()
declare -a cliKey=()

declare -a cliBuffer=( "${@}" )

# *********************************************************************************
#
#	lmsSplitParameter
#
#	    Splits the parameter string into name and value (in cliParam and cliKey arrays)
#
#	parameters:
#	    parameter = parameter string
#    Result:
#        0 = no error
#        non-zero = error number
#
# *********************************************************************************
function lmsSplitParameter()
{
    [[ -z "${1}" ]] && return 1

    lmsStrSplit "${1}" pName pValue
    [[ $? -eq 0 ]] || return 2

    cliParam[${pName}]=${pValue}
    cliKey[${#cliKey[@]}]=${pName}

    return 0
}

# **************************************************************************
#
#	lmsCliParse
#
#        Parse the global cli buffer (cliBuffer) 
#           into the global parameter array (cliParam)
#
#	parameters:
#	    none
#    Result:
#        0 = no error
#        non-zero = error number
#
# **************************************************************************
function lmsCliParse()
{
    [[ ${#cliBuffer[*]} -eq 0 ]] && return 0

    local pString

    for pString in "${cliBuffer[@]}"
    do
        lmsSplitParameter "${pString}"
		[[ $? -eq 0 ]] || return 1
    done

    return 0
}

