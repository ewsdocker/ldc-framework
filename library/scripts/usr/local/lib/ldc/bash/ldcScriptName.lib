# *****************************************************************************
# *****************************************************************************
#
#   ldcScriptName.lib
#
# *****************************************************************************
#
# @author Jay Wheeler.
# @version 0.2.0
# @copyright © 2016-2021. EarthWalk Software.
# @license Licensed under the GNU General Public License, GPL-3.0-or-later.
# @package ewsdocker/ldc-framework
# @subpackage library
#
# *****************************************************************************
#
#	Copyright © 2016-2021. EarthWalk Software
#	Licensed under the GNU General Public License, GPL-3.0-or-later.
#
#   This file is part of ewsdocker/ldc-framework.
#
#   ewsdocker/ldc-framework is free software: you can redistribute 
#   it and/or modify it under the terms of the GNU General Public License 
#   as published by the Free Software Foundation, either version 3 of the 
#   License, or (at your option) any later version.
#
#   ewsdocker/ldc-framework is distributed in the hope that it will 
#   be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ewsdocker/ldc-framework.  If not, see 
#   <http://www.gnu.org/licenses/>.
#
# *****************************************************************************
#
#
#			Version 0.0.1 - 02-24-2016.
#			        0.0.2 - 03-18-2016.
#
#					0.1.0 - 01-24-2017.
#					0.1.1 - 02-09-2017.
#					0.1.3 - 07-31-2019.
#                   0.1.4 - 06-20-2020.
#
#                   0.2.0 - 01-12-2021.
#
# *****************************************************************************
# *****************************************************************************

# =========================================================================
# =========================================================================
#
#	Dependencies:
#
# 		ldcDeclare.lib
#       ldcDisplay.lib
#
# =========================================================================
#
#	Library functions:
#
#		scrDisplayName
#			display the script name and version of this script.
#
#		scrParseFileName
#			parse the file name into its various parts
#
# =========================================================================
# =========================================================================

declare    scr_Version="0.2.0"	# main script version

# *****************************************************************************

declare    scr_Fqn="$0"			# script FQN

declare    scr_Directory=""		# script directory
declare    scr_Path=""			# script path
declare    scr_Name=""			# script name
declare    scr_Type=""			# script type

declare -A scr_scriptFields=()

# *****************************************************************************
#
#    scrDisplayName
#
#		display the script name and version of this script
#
# *****************************************************************************
function scrDisplayName()
{
	ldcDisplayTs 
	ldcDisplayTs "$(tput bold ; tput setaf 1)${scr_Name} v ${scr_Version}$(tput sgr0)"
}

# *****************************************************************************
#
#    scrParseName
#
#		parse the file name into its various parts
#
# *****************************************************************************
function scrParseName()
{
    local FQN="${1}"       	    								# script FQN
	scr_parsed=${2:-"scr_scriptFields"}							# where to put the data

	local lpnError=1

	while [ true ]
	do
		ldcDeclareArrayEl "$scr_parsed" "FQN" "${FQN}"				# script FQN
		[[ $? -eq 0 ]] || break
		
		(( lpnError++ ))

    	ldcDeclareArrayEl "$scr_parsed" "DIRECTORY" "${PWD}"		# script directory
		[[ $? -eq 0 ]] || break
		
		(( lpnError++ ))

    	ldcDeclareArrayEl "$scr_parsed" "PATH" "$(dirname $FQN)"	# script path
		[[ $? -eq 0 ]] || break
		
		(( lpnError++ ))

    	ldcDeclareArrayEl "$scr_parsed" "TYPE" "${FQN##*.}"	    	# script type
		[[ $? -eq 0 ]] || break
		
		(( lpnError++ ))

		local Name="${FQN##*/}"
		local Type=${scr_scriptFields[TYPE]}

		ldcDeclareArrayEl "$scr_parsed" "NAME" "${Name%.$Type}"    	# script name
		[[ $? -eq 0 ]] || break
		
		lpnError=0
		break
	done
	
	return $lpnError
}

# *****************************************************************************
#
#    scrScriptFileName
#
#		parse the startup script file name into its various parts
#
# *****************************************************************************
function scrFileName()
{
	local    scrError=0

	scrParseName "${0}"
	scrError=$?

	[[ $scrError -eq 0 ]] &&
	 {
        scr_Fqn=scr_scriptFields["FQN"]            	    # script FQN
        scr_Directory=scr_scriptFields["DIRECTORY"]	    # script directory
        scr_Path=scr_scriptFields["PATH"]				# script path
        scr_Name=scr_scriptFields["NAME"]			    # script name
        scr_Type=scr_scriptFields["TYPE"]			    # script type
	 }

	return $scrError
}

# *****************************************************************************
#
#	Invoke function to initialize the variables
#
# *****************************************************************************
scrFileName

# *****************************************************************************
