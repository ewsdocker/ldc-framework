#!/binbash
# ******************************************************************************
# ******************************************************************************
#
#  	ldcCom.lib
#		Provides access to jq command-line using a
#		common (COM) communication bridge.
#
# *****************************************************************************
#
# @author Jay Wheeler.
# @version 0.0.1
# @copyright © 2016-2021. EarthWalk Software.
# @license Licensed under the GNU General Public License, GPL-3.0-or-later.
# @package ewsdocker/ldc-library
# @subpackage ldcCom
#
# *****************************************************************************
#
#	Copyright © 2016-2021. EarthWalk Software
#	Licensed under the GNU General Public License, GPL-3.0-or-later.
#
#   This file is part of ewsdocker/ldc-library.
#
#   ewsdocker/ldc-library is free software: you can redistribute 
#   it and/or modify it under the terms of the GNU General Public License 
#   as published by the Free Software Foundation, either version 3 of the 
#   License, or (at your option) any later version.
#
#   ewsdocker/ldc-library is distributed in the hope that it will 
#   be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ewsdocker/ldc-library.  If not, see 
#   <http://www.gnu.org/licenses/>.
#
# *****************************************************************************
#
#	Version 0.0.1 - 02-01-2021.
#
# ******************************************************************************
#
#	Dependencies
#
#		ldcCom.lib
#
# *****************************************************************************
#
#	Functions:
#
#		ldcComFile
#			Set the name of the json file to process 
#
#		ldcComInit
#			initialize query vars and set the json file to query
#
#		ldcComOptions
#			Set the command options, if any. 
#				This is persistent... it will last until changed 
#
#		ldcComQuery
#			execute a query and set the query result value
#
#		ldcComReset
#			reset query vars
#
# ******************************************************************************
# ******************************************************************************

declare -r ldclib_ldcCom="0.0.1"				# version of ldcJq

# ******************************************************************************
#
#	Global declarations
#
# ******************************************************************************

declare    ldcjqcom_Path="."						# Path to the json file directory
declare    ldcjqcom_FileName=""					# name of the json file to query
declare -i ldcjqcom_FileExists=0					# true if the json file exists

declare    ldcjqcom_Query=""						# the current (or last executed) query
declare    ldcjqcom_QueryResult=""					# the result of the last executed query

declare    ldcjqcom_QueryOpts=""					# list of query options

declare -i ldcjqcom_Initialized=false				# true if initialized (first time)
declare    ldcjqcom_Result=0						# status returned from Jq function call

# ******************************************************************************
# ******************************************************************************
#
#						Functions
#
# ******************************************************************************
# ******************************************************************************

# ******************************************************************************
#
#	ldcComInit
#
#		initialize query vars and set the json file to query
#
#	parameters:
#		file = absolute path to the json file to query
#		jqpath = (optional) path to the jq program
#
#	returns:
#		0 = no error
#		non-zero = error code
#
# ******************************************************************************
function ldcComInit()
{
	local file="${1}"
	local jqpath=${2:-"."}

	ldcjqcom_Result=0
	ldcjqcom_Initialized=0

	ldcComReset

	ldcjqcom_Path="${jqpath}"

    [[ -z "${file}" ]] ||
	 {
		ldcComFile "${file}"
		[[ $? -eq 0 ]] || return 1
	 }

	ldcjqcom_Initialized=1
	return 0
}

# ******************************************************************************
#
#	ldcComReset
#
#		reset query vars
#
#	parameters:
#		none
#
#	returns:
#		0 => no error
#
# ******************************************************************************
function ldcComReset()
{
	set -o pipefail

	ldcjqcom_Path="."
	ldcjqcom_Query=""
	ldcjqcom_QueryOpts=""

	ldcjqcom_QueryResult=""

	ldcjqcom_FileName=""
}

# ******************************************************************************
#
#	ldcComOptions
#
#		Set the command options, if any. 
#			This is persistent... it will last until changed 
#
#	parameters:
#		jopts = the command options, null ("") to clear.
#
#	returns:
#		0 => no error
#		1 => query error
#
# ******************************************************************************
function ldcComOptions()
{
	ldcjqcom_QueryOpts="${1}"
	ldcjqcom_Result=0

	return $ldcjqcom_Result
}

# ******************************************************************************
#
#	ldcComFile
#
#		Set the name of the json file to process 
#
#	parameters:
#		jfile = the name of the json file to process
#
#	returns:
#		0 => no error
#		1 => query error
#
# ******************************************************************************
function ldcComFile()
{
	ldcjqcom_FileExists=0
	ldcjqcom_Result=1

	while [ true ]
	do
		[[ -z "${1}" ]] && break

		(( ldcjqcom_Result++ ))

		local jfile="${1}"
		[[ -e "${ldcjqcom_Path}/${jfile}" ]] || break

		ldcjqcom_FileExists=1
		ldcjqcom_FileName=${jfile}

		ldcjqcom_Result=0
		break

    done			

	return $ldcjqcom_Result
}

# ******************************************************************************
#
#	ldcComQuery
#
#		execute a query and set the query result value
#
#	parameters:
#		jquery = jq query to execute
#       jopts  = (optional) override global jq options values and use these instead
#								(only for this call)
#
#	returns:
#		0 = no error
#		non-zero = error code
#
# ******************************************************************************
function ldcComQuery()
{
	ldcjqcom_QueryResult=""
	ldcjqcom_Result=1

	while [ true ]
	do
		[[ -z "${1}" ]] && break

    	(( ldcjqcom_Result++ ))

		ldcjqcom_Query=${1}
		local jopts=${2:-"$ldcjqcom_QueryOpts"}

		ldcjqcom_QueryResult=$( ${ldcjqcom_Jq} ${jopts} '${ldcjqcom_Query}' "${ldcjqcom_Path}/${ldcjqcom_QueryFile}" )
		[[ $? -eq 0 ]] || break

    	(( ldcjqcom_Result++ ))

		[[ -z "${ldcjqcom_QueryResult}" ]] && break

		ldcjqcom_Result=0
		break
    done

	return $ldcjqcom_Result
}

# ******************************************************************************
# ******************************************************************************

