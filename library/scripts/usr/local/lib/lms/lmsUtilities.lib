#!/bin/bash
# =========================================================================
# =========================================================================
#
#	lmsUtilities
#	  Build version message to be displayed
#
# =========================================================================
#
# @author Jay Wheeler.
# @version 0.0.1
# @copyright © 2019. EarthWalk Software.
# @license Licensed under the GNU General Public License, GPL-3.0-or-later.
# @package ewsdocker/lms-utilities
# @subpackage lmsUtilities
#
# =========================================================================
#
#	Copyright © 2019. EarthWalk Software
#	Licensed under the GNU General Public License, GPL-3.0-or-later.
#
#   This file is part of ewsdocker/lms-utilities.
#
#   ewsdocker/lms-utilities is free software: you can redistribute 
#   it and/or modify it under the terms of the GNU General Public License 
#   as published by the Free Software Foundation, either version 3 of the 
#   License, or (at your option) any later version.
#
#   ewsdocker/lms-utilities is distributed in the hope that it will 
#   be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ewsdocker/lms-utilities.  If not, see 
#   <http://www.gnu.org/licenses/>.
#
# =========================================================================
# =========================================================================

# =========================================================================
# =========================================================================
#
#	Dependencies
#
#		lmsCli.lib
#		lmsDeclare.lib
#		lmsStr.lib
#
# =========================================================================
# =========================================================================

# =========================================================================================
# =========================================================================================
#
#	global declarations
#
# =========================================================================================
# =========================================================================================

declare    utilTs=""	# Timestamp

# =========================================================================================
# =========================================================================================
#
#	Functions:
#
#		lmsCliToDcl
#			Parse command-line arguements to global string declarations.
#
#		lmsTimestamp type destName
#			Create a timestamp.
#
# =========================================================================================
# =========================================================================================

# =========================================================================================
#
#	lmsCliToDcl
#		Parse command-line arguements to global string declarations.
#
#	Parameters:
#	    none
#
#   Result:
#       0 = no error
#       non-zero = error number
#
#	Dependencies:
#		lmsCli.lib
#		lmsDeclare.lib
#		lmsStr.lib
#
# =========================================================================================
function lmsCliToDcl()
{
	lmsCliParse
	[[ $? -eq 0 ]] || return $?

	for key in ${cliKey[@]}
	do
		lmsDeclareStr "$key" "${cliParam[$key]}"
		[[ $? -eq 0 ]] || return $?
	done
	
	return 0
}

# =========================================================================================
#
#    lmsTimestamp
#
#		Create a timestamp.
#
#	parameters:
#		type = 1 to include calendar info
#		timestamp = location to store the generated timestamp
#
#	returns:
#		0 = no error
#
#	Dependencies:
#		lmsDeclare.lib
#		lmsStr.lib
#
# =========================================================================================
function lmsTimestamp()
{
	local tsType=${1:-"0"}
	local tsName=${2}

	utilTs=""

	[[ "${tsType}" == "1" ]] && printf -v utilTs "%s " `date '+%Y-%m-%d'`
	printf -v utilTs "%s%s" "${utilTs}" `date '+%H:%M:%S'`

	[[ -n "${tsName}" ]] && lmsDeclareStr ${tsName} "${utilTs}"

	return 0
}

# =========================================================================================
# =========================================================================================
