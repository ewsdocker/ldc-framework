# =========================================================================
# =========================================================================
#
#	Dockerfile
#	  Dockerfile for ldc-langdev:djava (OpenJDK-java in a Debian container).
#
# =========================================================================
#
# @author Jay Wheeler.
# @version 0.1.0
# @copyright © 2017-2019. EarthWalk Software.
# @license Licensed under the GNU General Public License, GPL-3.0-or-later.
# @package ldc-langdev
# @subpackage Dockerfile.djava
#
# =========================================================================
#
#	Copyright © 2017-2019. EarthWalk Software
#	Licensed under the GNU General Public License, GPL-3.0-or-later.
#
#   This file is part of ewsdocker/ldc-langdev.
#
#   ewsdocker/ldc-langdev is free software: you can redistribute 
#   it and/or modify it under the terms of the GNU General Public License 
#   as published by the Free Software Foundation, either version 3 of the 
#   License, or (at your option) any later version.
#
#   ewsdocker/ldc-langdev is distributed in the hope that it will 
#   be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ewsdocker/ldc-langdev.  If not, see 
#   <http://www.gnu.org/licenses/>.
#
# =========================================================================
# =========================================================================

ARG FROM_REPO="ewsdocker"
ARG FROM_PARENT="ldc-langdev"
ARG FROM_VERS="dcdt-gppgui"
ARG FROM_EXT="-0.1.0"
ARG FROM_EXT_MOD="-b1"

FROM ${FROM_REPO}/${FROM_PARENT}:${FROM_VERS}${FROM_EXT}${FROM_EXT_MOD}

# =========================================================================
# =========================================================================

MAINTAINER Jay Wheeler <EarthWalkSoftware@gmail.com>

# =========================================================================

ARG FROM_PARENT
ARG FROM_REPO
ARG FROM_VERS
ARG FROM_EXT
ARG FROM_EXT_MOD

# =========================================================================

ARG JDK_RELEASE 
ARG JDK_VERS 
ARG JDK_HOST

# =========================================================================

ARG LIB_HOST
ARG LIB_NAME
ARG LIB_VERSION
ARG LIB_VERS_MOD
ARG LIB_INSTALL

# =========================================================================

ARG BUILD_REGISTRY
ARG BUILD_REPO

ARG BUILD_JDK

ARG BUILD_NAME 
ARG BUILD_VERSION
ARG BUILD_VERS_EXT
ARG BUILD_EXT_MOD

# =========================================================================

ARG BUILD_TEMPLATE
ARG BUILD_DAEMON

# =========================================================================

ARG BUILD_CATEGORIES
ARG BUILD_DESKTOP
ARG BUILD_ICON

# =========================================================================

ARG OPT_TIMEOUT
ARG OPT_QUIET
ARG OPT_DEBUG

# =========================================================================
# =========================================================================

ENV OPENJDK_RELEASE=${JDK_RELEASE:-"jdk11"} \
    OPENJDK_VERS=${JDK_VERS:-"11.0.2"} 

ENV OPENJDK_PKG="openjdk-${OPENJDK_VERS}_linux-x64_bin.tar.gz" 

ENV OPENJDK_HOST=${JDK_HOST:-"https://download.java.net/java/GA/jdk11/9/GPL/"}
ENV OPENJDK_URL="${OPENJDK_HOST}/${OPENJDK_PKG}" \
    \
    LMS_JDK=${BUILD_JDK:-"jdk11"} 
 
# =========================================================================

ENV \
    LMS_DAEMON=${BUILD_DAEMON:-"1"} \
    LMS_TEMPLATE=${BUILD_TEMPLATE:-"gui"} \
    \
    LMSOPT_TIMEOUT=${OPT_TIMEOUT:-"30"} \
    LMSOPT_QUIET=${OPT_QUIET:-"1"} \
    LMSOPT_DEBUG=${OPT_DEBUG:-"0"} \
    \
    LMS_BASE="/usr/local" \
    LMS_HOME= \
    LMS_CONF= \
    \
    LMSINSTALL_LIB=${LIB_INSTALL:-"0"} \
    \
    LMS_CATEGORIES=${BUILD_CATEGORIES:-"Development"} \
    LMS_DESKTOP=${BUILD_DESKTOP:-"ldc-langdev-djava"}-${OPENJDK_RELEASE} \
    LMS_ICON=${BUILD_ICON:-"openjdk-8.png"} \
    \
    LMS_FROM="${FROM_PARENT}:${FROM_VERS}${FROM_EXT}${FROM_EXT_MOD}" \
    LMS_PARENT="${FROM_PARENT}:${FROM_VERS}${FROM_EXT}${FROM_EXT_MOD}" \
    \
    LMS_REGISTRY=${BUILD_REGISTRY} \
    LMS_REPO=${BUILD_REPO:-"ewsdocker"} \
	\
    LMS_NAME=${BUILD_NAME:-"ldc-langdev"} \
    LMS_VERSION=${BUILD_VERSION:-"djava-jdk11"} \
    LMS_VERS_X=${BUILD_VERS_EXT:-"-0.1.0"} \
    LMS_VERS_MOD=${BUILD_EXT_MOD:-"-b1"} 

ENV LMS_VERS_EXT="${LMS_VERS_X}${LMS_VERS_MOD}" \
    LMS_PACKAGE="${LMS_PARENT}, openjdk-${OPENJDK_RELEASE}-${OPENJDK_VERS}" 

ENV LMS_RUN_NAME="${LMS_NAME}-${LMS_VERSION}${LMS_VERS_EXT}" \
    LMS_DOCKER_NAME="${LMS_NAME}:${LMS_VERSION}${LMS_VERS_EXT}"

ENV LMS_DOCKER="${LMS_REPO}/${LMS_DOCKER_NAME}"

# ========================================================================================
# ========================================================================================
#
# https://github.com/ewsdocker/ldc-utilities/releases/download/ldc-utilities-0.1.6/ldc-library-0.1.6-b1.tar.gz
#
# ========================================================================================
# ========================================================================================

ENV LMSLIB_INST=${LIB_INSTALL:-"0"} \
    LMSLIB_NAME=${LIB_NAME:-"ldc-library"} \
    LMSLIB_VERS=${LIB_VERSION:-"0.1.6"} \
    LMSLIB_VERS_MOD=${LIB_VERS_MOD:-""}

ENV LMSLIB_HOST=${LIB_HOST:-"https://github.com/ewsdocker/ldc-utilities/releases/download/ldc-utilities-${LMSLIB_VERS}"}

ENV LMSLIB_VERSION="${LMSLIB_VERS}${LMSLIB_VERS_MOD}"
ENV LMSLIB_FULLNAME="${LMSLIB_NAME}-${LMSLIB_VERSION}"

ENV LMSLIB_PKG=${LMSLIB_FULLNAME}.tar.gz 

ENV LMSLIB_URL=${LMSLIB_HOST}/${LMSLIB_PKG}

# =========================================================================

COPY scripts/. /

# =========================================================================

RUN \
    echo ""; echo "**************************************************"; echo "" \
 && echo "Building ${LMS_DESKTOP} - ${LMS_DOCKER}" \
 && echo ""; echo "**************************************************"; echo "" \
 \
 # =========================================================================
 \
 && apt-get -y upgrade \
 && apt-get -y update \
 && apt-get -y install \
            java-common \
 \
 # =========================================================================
 #
 #    Install jdk -8 is requested
 #      use default openjdk-8-jdk
 #
 # =========================================================================
 \
 && if test "${LMS_JDK}" = "jdk8"; then echo ""; echo "*** ${LMS_JDK} ***"; echo ""; fi \
 && if test "${LMS_JDK}" = "jdk8"; then apt-get -y install openjdk-8-jdk openjdk-8-jdk-headless; fi \ 
 \
 # =========================================================================
 #
 #    clean-up apt
 #
 # =========================================================================
 \
 && apt-get clean all \
 \
 # =========================================================================
 #
 #    If jdk10, or newer, is requested
 #
 # =========================================================================
 \
 && if test "${LMS_JDK}" = "jdk11"; then echo ""; echo "*** ${LMS_JDK} ***"; echo ""; fi \
 \
 && if test "${LMS_JDK}" = "jdk11"; then mkdir /usr/lib/jvm; cd /usr/lib/jvm; fi \
 && if test "${LMS_JDK}" = "jdk11"; then wget ${OPENJDK_URL}; tar xvf ${OPENJDK_PKG}; rm ${OPENJDK_PKG}; cd /root; fi \
 \
 && if test "${LMS_JDK}" = "jdk11"; then ln -s /usr/lib/jvm/jdk-${OPENJDK_VERS}/bin/java /usr/bin/java; fi \
 && if test "${LMS_JDK}" = "jdk11"; then ln -s /usr/lib/jvm/jdk-${OPENJDK_VERS}/bin/java /etc/alternatives/java; fi \
 \
 # =========================================================================
 #
 #   download and install ldc-library
 #
 # =========================================================================
 \
 && if test "${LMSLIB_INST}" = "1"; then cd / ; wget "${LMSLIB_URL}"; tar -xvf "${LMSLIB_PKG}"; rm "${LMSLIB_PKG}"; fi \
 \
 # ========================================================================
 #
 #   setup libraries and applications to run
 #
 # ========================================================================
 \
 && mkdir -p /usr/local/bin \
 && mkdir -p /usr/bin/lms \
 \
 && chmod +x /usr/local/bin/*.* \
 && chmod +x /usr/local/bin/* \
 && chmod +x /usr/bin/lms/*.* \
 && chmod +x /usr/bin/lms/* \
 && chmod +x /etc/lms/*.sh \
 && chmod +x /my_init \
 && chmod +x /my_service \
 \
 # =========================================================================
 #
 #    finish by registering the installed software
 #
 # =========================================================================
 \
 && printf "${LMS_DOCKER} (${LMS_PACKAGE}), %s @ %s\n" `date '+%Y-%m-%d'` `date '+%H:%M:%S'` >> /etc/ewsdocker-builds.txt 

# =========================================================================

ENTRYPOINT ["/my_init", "--quiet"]
